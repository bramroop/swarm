FROM debian:jessie
MAINTAINER Bjorn Ramroop

ENV DEBIAN_FRONTEND noninteractive
ENV DEBCONF_NONINTERACTIVE_SEEN true

# Set timezone
RUN echo "US/Eastern" > /etc/timezone && \
    dpkg-reconfigure --frontend noninteractive tzdata

############################################################################
# Install Ruby

# skip installing gem documentation
RUN mkdir -p /usr/local/etc \
	&& { \
		echo 'install: --no-document'; \
		echo 'update: --no-document'; \
	} >> /usr/local/etc/gemrc

ENV RUBY_MAJOR 2.3
ENV RUBY_VERSION 2.3.1
ENV RUBYGEMS_VERSION 2.6.6
ENV RUBY_DOWNLOAD_SHA256 b87c738cb2032bf4920fef8e3864dc5cf8eae9d89d8d523ce0236945c5797dcd

# some of ruby's build scripts are written in ruby
# we purge this later to make sure our final image uses what we just built
RUN set -ex \
	&& buildDeps=' \
		bison \
		libgdbm-dev \
		ruby \
	' \
	&& missingPkgs=' \
		build-essential \
		curl \
		autoconf \
		make \
		zlib1g-dev \
        libssl-dev \
        libreadline-dev \
	' \
	&& apt-get update \
	&& apt-get install -y --no-install-recommends $missingPkgs \
	&& apt-get install -y --no-install-recommends unzip \
	&& apt-get install -y --no-install-recommends $buildDeps \
	&& rm -rf /var/lib/apt/lists/* \
	&& curl -fSL -o ruby.tar.gz "http://cache.ruby-lang.org/pub/ruby/$RUBY_MAJOR/ruby-$RUBY_VERSION.tar.gz" \
	&& echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.gz" | sha256sum -c - \
	&& mkdir -p /usr/src/ruby \
	&& tar -xzf ruby.tar.gz -C /usr/src/ruby --strip-components=1 \
	&& rm ruby.tar.gz \
	&& cd /usr/src/ruby \
	&& { echo '#define ENABLE_PATH_CHECK 0'; echo; cat file.c; } > file.c.new && mv file.c.new file.c \
	&& autoconf \
	&& ./configure --disable-install-doc \
    # && ./configure --with-openssl-dir=/usr/bin \
	&& make -j"$(nproc)" \
	&& make install \
	&& apt-get purge -y --auto-remove $buildDeps \
	&& gem update --system $RUBYGEMS_VERSION \
	&& rm -r /usr/src/ruby

ENV BUNDLER_VERSION 1.13.1

RUN gem install bundler --version "$BUNDLER_VERSION"

# install things globally, for great justice
# and don't create ".bundle" in all our apps
ENV GEM_HOME /usr/local/bundle
ENV BUNDLE_PATH="$GEM_HOME" \
	BUNDLE_BIN="$GEM_HOME/bin" \
	BUNDLE_SILENCE_ROOT_WARNING=1 \
	BUNDLE_APP_CONFIG="$GEM_HOME"
ENV PATH $BUNDLE_BIN:$PATH
RUN mkdir -p "$GEM_HOME" "$BUNDLE_BIN" \
	&& chmod 777 "$GEM_HOME" "$BUNDLE_BIN"

###################################################################################

# DON'T KNOW WHY WE NEED THIS
##########################################################################################
# # Create a default user
# RUN useradd automation --shell /bin/bash --create-home
#
# # Update the repositories
# # Install utilities
# # Install XVFB and TinyWM
# # Install fonts
# # Install Python
# RUN apt-get -yqq update && \
#     apt-get -yqq install curl unzip && \
#     apt-get -yqq install xvfb tinywm && \
#     apt-get -yqq install fonts-ipafont-gothic xfonts-100dpi xfonts-75dpi xfonts-scalable xfonts-cyrillic && \
#     apt-get -yqq install python && \
#     rm -rf /var/lib/apt/lists/*
########################################################################################

# Unsure why this is needed
# # Install Supervisor
# RUN curl -sS -o - https://bootstrap.pypa.io/ez_setup.py | python && \
#     easy_install -q supervisor

# Install Chrome WebDriver
RUN CHROMEDRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE` && \
    mkdir -p /opt/chromedriver-$CHROMEDRIVER_VERSION && \
    curl -sS -o /tmp/chromedriver_linux64.zip http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip && \
    unzip -qq /tmp/chromedriver_linux64.zip -d /opt/chromedriver-$CHROMEDRIVER_VERSION && \
    rm /tmp/chromedriver_linux64.zip && \
    chmod +x /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver && \
    ln -fs /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver /usr/local/bin/chromedriver

# Install Google Chrome
RUN curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
    echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list && \
    apt-get -yqq update && \
    apt-get -yqq install google-chrome-stable && \
    rm -rf /var/lib/apt/lists/*

# Unsure why this is needed
# # Configure Supervisor
# ADD ./etc/supervisord.conf /etc/
# ADD ./etc/supervisor /etc/supervisor

###################################################################
# Add swarmbot code

# Add Chrome as a user
RUN groupadd -r chrome && useradd -r -g chrome -G audio,video chrome \
    && mkdir -p /home/chrome && chown -R chrome:chrome /home/chrome

WORKDIR /tmp
ADD Gemfile Gemfile
ADD Gemfile.lock Gemfile.lock
RUN bundle install

RUN mkdir /app
WORKDIR /app
ADD . /app

######################################################################

# Run Chrome non-privileged
USER chrome

# Expose port 9222
EXPOSE 9222

# Set docker ENV
ENV SITE="prod" HEADLESS="true"

# Autorun swarmbot
# ENTRYPOINT [ "rake" ]
CMD rake investing_swarmbot


# REMOVING THIS FOR NOW
#####################################################################################
# # Default configuration
# ENV DISPLAY :20.0
# ENV SCREEN_GEOMETRY "1440x900x24"
# ENV CHROMEDRIVER_PORT 4444
# ENV CHROMEDRIVER_WHITELISTED_IPS "127.0.0.1"
# ENV CHROMEDRIVER_URL_BASE ''

# EXPOSE 4444

# VOLUME [ "/var/log/supervisor" ]

# CMD ["/usr/local/bin/supervisord", "-c", "/etc/supervisord.conf"]
######################################################################################